# Generated by Django 2.0.2 on 2018-04-19 15:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('resource', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('interest', models.ManyToManyField(to='resource.AreaDict', verbose_name='兴趣')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '学生管理',
                'verbose_name_plural': '学生管理',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='建议标题')),
                ('content', models.TextField(verbose_name='建议内容')),
                ('submit_time', models.DateTimeField(auto_now=True, verbose_name='提交时间')),
                ('status', models.BooleanField(choices=[(True, '已读'), (False, '未读')], default=False, verbose_name='是否已读')),
                ('user', models.CharField(default='', max_length=30, verbose_name='建议人')),
            ],
            options={
                'verbose_name': '教学建议',
                'verbose_name_plural': '教学建议',
                'db_table': 'advice',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, verbose_name='通知标题')),
                ('content', models.TextField(verbose_name='通知内容')),
                ('pub_time', models.DateTimeField(auto_now=True, verbose_name='发布时间')),
            ],
            options={
                'verbose_name': '教学通知',
                'verbose_name_plural': '教学通知',
                'db_table': 'annoucement',
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='分享标题')),
                ('type', models.IntegerField(choices=[(1, '文章'), (2, '视频'), (3, '书籍')], verbose_name='类别')),
                ('content', models.TextField(verbose_name='分享内容')),
                ('reason', models.TextField(verbose_name='分享理由')),
                ('status', models.IntegerField(choices=[(0, '未审核'), (1, '已审核'), (2, '已发布')], default=0, verbose_name='状态')),
                ('share_time', models.DateTimeField(auto_now=True, verbose_name='分享时间')),
                ('pub_time', models.DateTimeField(auto_now=True, verbose_name='发布时间')),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resource.AreaDict', verbose_name='领域')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='分享人')),
            ],
            options={
                'verbose_name': '学生分享',
                'verbose_name_plural': '学生分享',
                'db_table': 'share',
            },
        ),
    ]
